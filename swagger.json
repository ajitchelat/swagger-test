{
  "components": {
    "parameters": {
      "action": {
        "description": "",
        "in": "query",
        "name": "action",
        "required": false,
        "schema": {
          "enum": [
            "unset"
          ],
          "type": "string"
        }
      },
      "args": {
        "allowReserved": true,
        "description": "sortby:String,detail:Boolean,sortorder:String,name:String,fullvalues:Boolean,logfile:String,clearstats:String,ntimes:Double,",
        "in": "query",
        "name": "args",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "attrs": {
        "allowReserved": true,
        "in": "query",
        "name": "attrs",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "bulkbindings": {
        "in": "query",
        "name": "bulkbindings",
        "required": false,
        "schema": {
          "enum": [
            "yes",
            "no"
          ],
          "type": "string"
        }
      },
      "count": {
        "in": "query",
        "name": "count",
        "required": false,
        "schema": {
          "enum": [
            "yes",
            "no"
          ],
          "type": "string"
        }
      },
      "entityname": {
        "in": "query",
        "name": "entityname",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "filter": {
        "allowReserved": true,
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "format": {
        "in": "query",
        "name": "format",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "httpheader": {
        "in": "query",
        "name": "httpheader",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "idempotent": {
        "in": "query",
        "name": "idempotent",
        "required": false,
        "schema": {
          "enum": [
            "yes",
            "no"
          ],
          "type": "string"
        }
      },
      "includeprimaryresource": {
        "in": "query",
        "name": "includeprimaryresource",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "pageno": {
        "in": "query",
        "name": "pageno",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "pagesize": {
        "in": "query",
        "name": "pagesize",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "rawdata": {
        "in": "query",
        "name": "rawdata",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "sessionid": {
        "in": "query",
        "name": "sessionid",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "skipinvalidargs": {
        "in": "query",
        "name": "skipinvalidargs",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "statbindings": {
        "in": "query",
        "name": "statbindings",
        "required": false,
        "schema": {
          "enum": [
            "yes",
            "no"
          ],
          "type": "string"
        }
      },
      "view": {
        "in": "query",
        "name": "view",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "warning": {
        "in": "query",
        "name": "warning",
        "required": false,
        "schema": {
          "enum": [
            "yes",
            "no"
          ],
          "type": "string"
        }
      }
    },
    "schemas": {
      "aaacertparams": {
        "additionalProperties": true,
        "properties": {
          "defaultauthenticationgroup": {
            "description": "| \n\tThis is the default group that is chosen when the authentication succeeds in addition to extracted groups.",
            "maxLength": 64,
            "type": "string"
          },
          "groupnamefield": {
            "description": "| \n\tClient certificate field that specifies the group, in the format <field>:<subfield>.",
            "type": "string"
          },
          "twofactor": {
            "description": "| \n\tThe state of the two-factor authentication.",
            "readOnly": true,
            "type": "string"
          },
          "usernamefield": {
            "description": "| \n\tClient certificate field that contains the username, in the format <field>:<subfield>. ",
            "type": "string"
          }
        },
        "type": "object"
      },
      "apiresponse": {
        "properties": {
          "error_code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "severity": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "password": {
        "in": "header",
        "name": "X-NITRO-PASS",
        "type": "apiKey"
      },
      "username": {
        "in": "header",
        "name": "X-NITRO-USER",
        "type": "apiKey"
      }
    }
  },
  "info": {
    "title": "Nitro API Specification for aaacertparams",
    "version": "v1"
  },
  "openapi": "3.0.0",
  "paths": {
    "/aaacertparams": {
      "get": {
        "operationId": "describe_all_aaacertparams",
        "parameters": [
          {
            "$ref": "#/components/parameters/args"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/apiresponse"
                    },
                    {
                      "$ref": "#/components/schemas/aaacertparams"
                    }
                  ],
                  "example": {
                    "aaacertparams": [
                      "<check_schema_for_complete_items>"
                    ]
                  }
                }
              }
            },
            "description": "Ok"
          }
        },
        "security": [
          {
            "username": []
          },
          {
            "password": []
          }
        ],
        "summary": "Get the details/count of all aaacertparams  entities",
        "tags": [
          "aaacertparams"
        ]
      },
      "post": {
        "operationId": "unset_aaacertparams",
        "parameters": [
          {
            "$ref": "#/components/parameters/action"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "aaacertparams": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/aaacertparams"
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "request payload for configuring  the given entity",
          "required": true
        },
        "responses": {
          "201": {
            "description": "Ok"
          }
        },
        "security": [
          {
            "username": []
          },
          {
            "password": []
          }
        ],
        "summary": "unset_aaacertparams",
        "tags": [
          "aaacertparams"
        ]
      },
      "put": {
        "operationId": "update_aaacertparams",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "aaacertparams": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/aaacertparams"
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "request payload for configuring  the given entity",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/apiresponse"
                    },
                    {
                      "$ref": "#/components/schemas/aaacertparams"
                    }
                  ],
                  "example": {
                    "errorcode": 0,
                    "message": "Done",
                    "severity": "None"
                  }
                }
              }
            },
            "description": "Ok"
          }
        },
        "security": [
          {
            "username": []
          },
          {
            "password": []
          }
        ],
        "summary": "update_aaacertparams",
        "tags": [
          "aaacertparams"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "{protocol}:/nitro/v1/config",
      "variables": {
        "protocol": {
          "default": "http",
          "enum": [
            "http",
            "https"
          ]
        }
      }
    }
  ],
  "tags": [
    {
      "description": "The details of configured entities",
      "name": "aaacertparams"
    }
  ]
}
